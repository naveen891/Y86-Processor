$date
	Wed Mar 10 05:42:28 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fetch_tb $end
$var wire 64 ! valp [63:0] $end
$var wire 64 " valc [63:0] $end
$var wire 4 # rB [3:0] $end
$var wire 4 $ rA [3:0] $end
$var wire 1 % iv $end
$var wire 1 & ime $end
$var wire 4 ' ifun [3:0] $end
$var wire 4 ( icode [3:0] $end
$var wire 1 ) flag1 $end
$var reg 64 * pc [63:0] $end
$scope module uut $end
$var wire 64 + pc [63:0] $end
$var reg 1 ) flag1 $end
$var reg 4 , icode [3:0] $end
$var reg 4 - ifun [3:0] $end
$var reg 1 & ime $end
$var reg 1 % iv $end
$var reg 4 . rA [3:0] $end
$var reg 4 / rB [3:0] $end
$var reg 64 0 valC [63:0] $end
$var reg 64 1 valP [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 1
b0 0
b10 /
b100 .
b11 -
b110 ,
b0 +
b0 *
1)
b110 (
b11 '
0&
0%
b100 $
b10 #
b0 "
b10 !
$end
